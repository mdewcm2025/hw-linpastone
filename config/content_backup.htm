<h1>About</h1>
<p>課程名稱: 網際內容管理 - Web Content Management</p>
<p>學員作業網站:  <a href="https://mdewcm2025.github.io/hw-linpastone/content/index.html">https://mdewcm2025.github.io/hw-linpastone/content/index.html</a></p>
<p>學員作業倉儲:  <a href="https://github.com/mdewcm2025/hw-linpastone">https://github.com/mdewcm2025/hw-linpastone</a></p>
<p>本地伺服器網頁： <a href="https://ryanpi.ddns.net/">https://ryanpi.ddns.net</a></p>
<p><span>reeborg網頁： <a href="https://mdewcm2025.github.io/hw-linpastone/reeborg">https://mdewcm2025.github.io/hw-linpastone/reeborg</a></span></p>
<hr/>
<p>課程代號: wcm2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>87b7bbx</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">1. 作業 (40%): 從 Github Classroom 取得的個人倉儲與網站, 每週必須至少提交 2 次與課程進度有關的內容.</p>
<p style="padding-left: 60px;">作業一 (20%): 採用 <a href="https://nginx.org/">nginx</a> 建立全球資訊網伺服器</p>
<p style="padding-left: 90px;">在 Windows 操作系統中建立一台 WWW 伺服器</p>
<p style="padding-left: 90px;">在 Ubuntu 操作系統建立一台 WWW 伺服器</p>
<p style="padding-left: 90px;">在 虛擬主機上建立一台 WWW 伺服器 (Windows and Ubuntu)</p>
<p style="padding-left: 120px;">Virtualbox</p>
<p style="padding-left: 120px;">Vmware <a href="https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/">最近宣布</a>適用於 Windows 及 Linux 的 Vmware Workstation Pro (<a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17.6/rn/vmware-workstation-176-pro-release-notes/index.html">17.6</a>), 與適用於 MacOS 的 Vmware Fusion Pro 全面免費.</p>
<p style="padding-left: 120px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro">下載 Vmware Workstation Pro</a> (For Windows and Linux) - 註冊帳號後下載 VMware-workstation-full-17.6.2.exe</p>
<p style="padding-left: 120px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">下載 Vmware Fusion Pro</a> (For Mac) - 註冊帳號後下載</p>
<p style="padding-left: 60px;">作業二 (20%): 在各種不同環境下的操作系統中配置 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</p>
<p style="padding-left: 30px;">2. 期中協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p style="padding-left: 60px;">專案題目: 利用 Copilot 解析 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</p>
<p style="padding-left: 30px;">3. 期末協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p style="padding-left: 60px;"><span>專案題目: 網際內容管理架構下的 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)<br/></span></p>
<p style="padding-left: 90px;">利用 uwsgi 配置分組學員執行 cmsimde 動態內容管理系統編輯</p>
<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>
<p style="padding-left: 90px;">設法將 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>) 與 cmsimde 網際內容管理系統整合</p><h1>Homework</h1>
<p>=======</p>
<p style="padding-left: 90px;">設法將 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>) 與 cmsimde 網際內容管理系統整合</p>
<p style="padding-left: 90px;"></p>
<p style="padding-left: 90px;"></p>
<h1>Tasks</h1>
<p>Task1:<span> </span><span>自行製作可攜程式系統</span></p>
<p>目的: 利用網際環境進行協同的成員, 在任一台 Windows 64 位元電腦上都擁有相同版本的網際內容管理工具.</p>
<p>Task2:<span> </span><span>使用 SSH 協定執行作業倉儲的推送</span></p>
<p>目的: 當多位組員在同一台電腦上執行<span> </span><a href="https://en.wikipedia.org/wiki/Pair_programming">Pair Programming</a>, 可以透過 SSH 共用協同 session, 分別透過可攜程式套件各自提交推送分組專案中的各部內容.</p>
<p>Task2.5: 在網際內容管理協同專案進行中,<span> </span><span>導入 Fossil SCM</span></p>
<p>目的: 由於免付費的 Github.com 服務, 限制使用者可上傳到倉儲中的檔案大小, 若協同專案需要管理 20MB 以上的單一檔案, 且希望保有分散式版次管理特性, 並利用網際流程管理內容, 在團隊小於 20 人的情況下, 可以使用 Fossil SCM 自行建立網際內容管理伺服器.</p>
<p>Task3:<span> </span><span>導入 IPv6, Virtualbox 與 nginx (<a href="https://github.com/mdecycu/mind-map">mind-map</a>)</span></p>
<p>目的: 可以配發每位學員一個固定 IPv6 網址, 結合 Virtualbox 與 nginx, 建立 Windows 與 Ubuntu 環境中的網際內容管理伺服器.</p>
<p>過程中可以利用 mind-map 呈現伺服器架構與設置內容</p>
<p>Task4:<span> </span><span>導入 Reeborg 網際機器人程式環境</span></p>
<p>目的: 利用 2D Reeborg 的網際機器人程式套件, 說明網際協同設計的發展, 可以透過 WWW 同步設計, 建立更多虛擬整合 (Cyber-Physical Integration) 應用.</p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<h2>Task1</h2>
<h4>自行製作可攜程式系統</h4>
<p>此作業的目的在展示如何利用既有的 Python 可攜系統建立各版本的 Python 可攜環境.</p>
<p>以下為操作步驟:</p>
<ol>
<li>下載<span> </span><a href="http://229.cycu.org/portable_python311.7z">portable_python311.7z</a>, 展開後是一套尚未安裝 pip 的 Python 3.11 可攜程式環境.</li>
<li>雙點擊 portable_python311 目錄中的 start_ipv6.bat 啟動可攜系統, 在 SciTE 中開啟 Y:\<a href="https://mdewcm2025.github.io/hw-scrum-1/downloads/gen_python313.py">gen_python313.py</a>, 以下拉式功能表 Tools - Go 執行, 便可在 Y:\ 建立 Python313 目錄.</li>
<li>接著修改 start_ipv6.bat, 利用 Search - Replace, Find 欄位填上 Python311, Replace 欄位填上 Python313 後, 按下 Replace All, 便可將啟動檔中所有 Python311 設定改為 Python313, 另存修改後的檔案為 start_python313.bat. </li>
<li>接下來以 stop.bat 關閉 start_ipv6.bat 開啟的可攜系統, 改以心建立的 start_python313.bat 開啟可攜環境, 之後在命令列輸入 python, 確認目前的 Python 版本為 3.13.2 後, 利用 Ctrl + z 退出 Python 後, 利用 pip list 確認目前的 Python 3.13.2 系統尚未配置 pip 模組管理工具.<img alt="" height="94" src="/images/p313.png" width="800"/></li>
<li>在命令列中, 以 python get-pip.py 安裝 pip 工具, 完成後, 以 pip list 確認 pip.exe 已經配置完成.<img alt="" height="328" src="/images/piplist.png" width="800"/></li>
<li>最後在命令列中, 以 pip install flask flask_cors bs4 lxml pelican markdown 安裝 cmsimde 網際內容管理系統啟動所需的 Python 模組後, 此可攜系統中的 Python 3.13.2 套件已經可以用來維護個人作業倉儲與分組倉儲.<img alt="" height="580" src="/images/pip f.png" width="800"/></li>
<li>之後利用新版的<span> </span><a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a>,<span> </span><a href="https://git-scm.com/downloads/win">Portablegit</a>,<span> </span><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>,<span> </span><a href="https://github.com/ShareX/ShareX/releases">ShareX</a>,<span> </span><a href="https://www.debugmode.com/wink.html">Wink</a>,<span> </span><a href="https://solvespace.com/download.pl">Solvespace</a>,<span> </span><a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/zoomit">Zoomit</a>,<span> </span><a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/process-explorer#download">ProcessExplorer</a><span> </span>以及原有的 tmp 及 home_ipv6, 以新的 start_python313 啟動.</li>
</ol>
<p>以下為操作影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="650" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/t8E8u9fbIV0?si=1Njkz6iEcJ4jq4Uw" title="YouTube video player" width="1020"></iframe></p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<h1>Homework</h1>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; b81180575848c63f1bde68a7901cd75a7e77f126</p>
<p>1. 作業 (40%): 從 Github Classroom 取得的個人倉儲與網站, 每週必須至少提交 2 次與課程進度有關的內容.</p>
<p style="padding-left: 30px;">作業一 (20%): 採用 <a href="https://nginx.org/">nginx</a> 建立全球資訊網伺服器</p>
<p style="padding-left: 60px;">在 Windows 操作系統中建立一台 WWW 伺服器</p>
<p style="padding-left: 60px;">在 Ubuntu 操作系統建立一台 WWW 伺服器</p>
<p style="padding-left: 60px;">在 虛擬主機上建立一台 WWW 伺服器 (Windows and Ubuntu)</p>
<p style="padding-left: 90px;">Virtualbox</p>
<p style="padding-left: 90px;">Vmware <a href="https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/">最近宣布</a>適用於 Windows 及 Linux 的 Vmware Workstation Pro (<a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17.6/rn/vmware-workstation-176-pro-release-notes/index.html">17.6</a>), 與適用於 MacOS 的 Vmware Fusion Pro 全面免費.</p>
<p style="padding-left: 90px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro">下載 Vmware Workstation Pro</a> (For Windows and Linux) - 註冊帳號後下載 VMware-workstation-full-17.6.2.exe</p>
<p style="padding-left: 90px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">下載 Vmware Fusion Pro</a> (For Mac) - 註冊帳號後下載</p>
<p style="padding-left: 30px;">作業二 (20%): 在各種不同環境下的操作系統中配置 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</p>
<h2>HW1</h2>
<p>作業一 (20%): 採用 <a href="https://nginx.org/">nginx</a> 建立全球資訊網伺服器</p>
<p style="padding-left: 30px;">在 Windows 操作系統中建立一台 WWW 伺服器</p>
<p style="padding-left: 30px;">在 Ubuntu 操作系統建立一台 WWW 伺服器</p>
<p style="padding-left: 30px;">在 虛擬主機上建立一台 WWW 伺服器 (Windows and Ubuntu)</p>
<p style="padding-left: 60px;">Virtualbox</p>
<p style="padding-left: 60px;">Vmware <a href="https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/">最近宣布</a>適用於 Windows 及 Linux 的 Vmware Workstation Pro (<a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17.6/rn/vmware-workstation-176-pro-release-notes/index.html">17.6</a>), 與適用於 MacOS 的 Vmware Fusion Pro 全面免費.</p>
<p style="padding-left: 60px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro">下載 Vmware Workstation Pro</a> (For Windows and Linux) - 註冊帳號後下載 VMware-workstation-full-17.6.2.exe</p>
<p style="padding-left: 60px;"><a href="https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion">下載 Vmware Fusion Pro</a> (For Mac) - 註冊帳號後下載</p>
<h2>HW2</h2>
<p>作業二 (20%): 在各種不同環境下的操作系統中配置 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</p>
<h1>Midterm</h1>
<p>2. 期中協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p style="padding-left: 30px;">專案題目: 利用 Copilot 解析 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)</p>
<h1>Final</h1>
<p>3. 期末協同專案執行、簡報與報告 (三人一組) (30%)</p>
<p style="padding-left: 30px;"><span>專案題目: 網際內容管理架構下的 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>)<br/></span></p>
<p style="padding-left: 60px;">利用 uwsgi 配置分組學員執行 cmsimde 動態內容管理系統編輯</p>
<p style="padding-left: 60px;">設法將 <a href="https://mde.tw/reeborg/world.html">Reeborg's world</a> (<a href="https://github.com/mdecycu/reeborg">原始碼</a>) 與 cmsimde 網際內容管理系統整合</p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>
<p>wcm2025</p>
<!-- <script src="./../cmsimde/static/jquery.js"></script> -->
<p></p>
<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script> -->
<script src="/cmsimde/static/chimper/js/jquery-3.3.1.min.js"></script>
<script src="/cmsimde/static/tipuesearch/tipuesearch_set.js"></script>
<script src="/tipuesearch_content.js"></script>
<script src="/cmsimde/static/tipuesearch/tipuesearch.js"></script>
<!-- for Wink3 客製化關閉 -->
<p></p>
<!--
        <link rel="stylesheet" type="text/css" href="./../cmsimde/static/winkPlayer.css" />
        <script type="text/javascript" src="./../cmsimde/static/winkPlayer.js"></script>
        -->
<script>
            /* original tipuesearch
            $(document).ready(function() {
                 $('#tipue_search_input').tipuesearch();
            });
            */
            // customed doSearch
            function doSearch() {
                $('#tipue_search_input').tipuesearch({
                    newWindow: true, 
                    minimumLength: 2,
                    wholeWords: false, // for search 中文
                });
            }
            $(document).ready(doSearch);
        
</script>
<script src="/cmsimde/static/syntaxhighlighter/shCore.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushBash.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushDiff.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushJScript.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushJava.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushPython.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushSql.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushHaxe.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushXml.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushPhp.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushPowerShell.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushLua.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushMojo.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushWbt.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushCpp.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushCss.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushCSharp.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushDart.js" type="text/javascript"></script>
<script src="/cmsimde/static/syntaxhighlighter/shBrushRust.js" type="text/javascript"></script>
<script type="text/javascript">
SyntaxHighlighter.all();
</script>
<!-- 暫時不用
<script src="./../cmsimde/static/fengari-web.js"></script>
<script type="text/javascript" src="./../cmsimde/static/Cango-13v08-min.js"></script>
<script type="text/javascript" src="./../cmsimde/static/CangoAxes-4v01-min.js"></script>
<script type="text/javascript" src="./../cmsimde/static/gearUtils-05.js"></script>
-->
<p></p>
<!-- for Brython 暫時不用
<script src="https://scrum-3.github.io/web/brython/brython.js"></script>
<script src="https://scrum-3.github.io/web/brython/brython_stdlib.js"></script>
-->
<div class="container"><nav>
<div class="site-wrap">
<div class="site-mobile-menu">
<div class="site-mobile-menu-header">
<div class="site-mobile-menu-close mt-3"><span class="icon-close2 js-menu-toggle"></span></div>
</div>
<div class="site-mobile-menu-body"></div>
</div>
<header class="site-navbar py-4 bg-white" role="banner">
<div class="container">
<div class="row align-items-center"><br/><a href="/Old.html"></a>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/cmsimde/static/brython.js"></script>
<script src="/cmsimde/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/cmsimde/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/cmsimde/static/ace/ace.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/cmsimde/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/cmsimde/static/Cango-24v03-min.js"></script>
<script src="/cmsimde/static/gearUtils-09.js"></script>
<script src="/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="/cmsimde/static/sylvester.js"></script>
<script src="/cmsimde/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p></p>
<br/><br/>Old &lt;&lt; <a href="/Old.html">Previous</a></div>
</div>
</header></div>
<!-- footer -->
<div class="container">
<div class="row pt-3 mx-auto">
<p><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --> Copyright ©
<script>
document.write(new Date().getFullYear());
</script>
All rights reserved | This template is made with <i aria-hidden="true" class="icon-heart"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a> <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>
</div>
</div>
<!-- for footer --></nav></div>
<!-- for site wrap -->
<p></p>
<!-- <script src="../cmsimde/static/chimper/js/jquery-3.3.1.min.js"></script> -->
<script src="/cmsimde/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/cmsimde/static/chimper/js/jquery-ui.js"></script>
<script src="/cmsimde/static/chimper/js/popper.min.js"></script>
<script src="/cmsimde/static/chimper/js/bootstrap.min.js"></script>
<script src="/cmsimde/static/chimper/js/owl.carousel.min.js"></script>
<script src="/cmsimde/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/cmsimde/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/cmsimde/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/cmsimde/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/cmsimde/static/chimper/js/aos.js"></script>
<!--
            <script src="../cmsimde/static/chimper/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<script src="/cmsimde/static/chimper/js/main.js"></script>
<!-- 啟用 LaTeX equations 編輯 -->
<p></p>
<!-- <script>
  MathJax = {
    tex: {inlineMath: [['$', '$'], ['\(', '\)']]}
  };
  </script>
  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>-->
<p><iframe height="150" id="paywall-465" src="https://onlineapp.pro/paywall/465?v=2" style="display: none;" width="300"></iframe></p>